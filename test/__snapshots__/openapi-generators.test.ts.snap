// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`openapi generators > converts empty config correctly 1`] = `
{
  "components": {
    "requestBodies": {
      "PayloadLockedDocumentRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "document": {
                  "description": "ID of the users",
                  "type": "string",
                },
                "globalSlug": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadLockedDocument",
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document",
      },
      "PayloadMigrationRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "batch": {
                  "nullable": true,
                  "type": "number",
                },
                "name": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadMigration",
              "type": "object",
            },
          },
        },
        "description": "Payload Migration",
      },
      "PayloadPreferenceRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "key": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "object",
                    },
                    {
                      "items": {},
                      "type": "array",
                    },
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "boolean",
                    },
                  ],
                  "nullable": true,
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadPreference",
              "type": "object",
            },
          },
        },
        "description": "Payload Preference",
      },
      "UsersRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                },
                "hash": {
                  "nullable": true,
                  "type": "string",
                },
                "lockUntil": {
                  "nullable": true,
                  "type": "string",
                },
                "loginAttempts": {
                  "nullable": true,
                  "type": "number",
                },
                "password": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordExpiration": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordToken": {
                  "nullable": true,
                  "type": "string",
                },
                "salt": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
                "email",
              ],
              "title": "User",
              "type": "object",
            },
          },
        },
        "description": "users",
      },
    },
    "responses": {
      "NewPayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocument",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "NewPayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigration",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "NewPayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreference",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "NewUsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Users",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "users object",
      },
      "PayloadLockedDocumentListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadLockedDocument",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Locked Documents",
      },
      "PayloadLockedDocumentNotFoundResponse": {
        "content": {},
        "description": "Payload Locked Document not found",
      },
      "PayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadLockedDocument",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "PayloadMigrationListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadMigration",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Migrations",
      },
      "PayloadMigrationNotFoundResponse": {
        "content": {},
        "description": "Payload Migration not found",
      },
      "PayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadMigration",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "PayloadPreferenceListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadPreference",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Preferences",
      },
      "PayloadPreferenceNotFoundResponse": {
        "content": {},
        "description": "Payload Preference not found",
      },
      "PayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadPreference",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "UsersListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/Users",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of users",
      },
      "UsersNotFoundResponse": {
        "content": {},
        "description": "users not found",
      },
      "UsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Users",
            },
          },
        },
        "description": "users object",
      },
    },
    "schemas": {
      "PayloadLockedDocument": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "document": {
            "oneOf": [
              {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "globalSlug": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Locked Document",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "globalSlug": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Locked Document query operations",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Locked Document query conjunction",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Locked Document query disjunction",
        "type": "object",
      },
      "PayloadMigration": {
        "additionalProperties": false,
        "properties": {
          "batch": {
            "nullable": true,
            "type": "number",
          },
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "name": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Migration",
        "type": "object",
      },
      "PayloadMigrationQueryOperations": {
        "properties": {
          "batch": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "name": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Migration query operations",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Migration query conjunction",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Migration query disjunction",
        "type": "object",
      },
      "PayloadPreference": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "key": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "value": {
            "anyOf": [
              {
                "type": "object",
              },
              {
                "items": {},
                "type": "array",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
            "nullable": true,
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Preference",
        "type": "object",
      },
      "PayloadPreferenceQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "key": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Preference query operations",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Preference query conjunction",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Preference query disjunction",
        "type": "object",
      },
      "Users": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "hash": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "lockUntil": {
            "nullable": true,
            "type": "string",
          },
          "loginAttempts": {
            "nullable": true,
            "type": "number",
          },
          "password": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordExpiration": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordToken": {
            "nullable": true,
            "type": "string",
          },
          "salt": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
          "email",
        ],
        "title": "users",
        "type": "object",
      },
      "UsersQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "email": {
            "properties": {
              "contains": {
                "format": "email",
                "type": "string",
              },
              "equals": {
                "format": "email",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "not_equals": {
                "format": "email",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "hash": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "lockUntil": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "loginAttempts": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordExpiration": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordToken": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "salt": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "users query operations",
        "type": "object",
      },
      "UsersQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UsersQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "users query conjunction",
        "type": "object",
      },
      "UsersQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UsersQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "users query disjunction",
        "type": "object",
      },
      "supportedTimezones": {
        "example": "Europe/Prague",
        "type": "string",
      },
    },
    "securitySchemes": {
      "ApiKey": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api//api/auth",
          },
        },
        "type": "oauth2",
      },
    },
  },
  "info": {
    "title": "Test API",
    "version": "1.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/payload-locked-documents": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "globalSlug",
                "-globalSlug",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Locked Documents",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadLockedDocumentRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadLockedDocumentResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-locked-documents/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Locked Document by ID",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Locked Document",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-migrations": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "name",
                "-name",
                "batch",
                "-batch",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Migrations",
        "tags": [
          "Payload Migrations",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadMigrationRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadMigrationResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-migrations/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Migration by ID",
        "tags": [
          "Payload Migrations",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Migration",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-preferences": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "key",
                "-key",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Preferences",
        "tags": [
          "Payload Preferences",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadPreferenceRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadPreferenceResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/payload-preferences/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Preference by ID",
        "tags": [
          "Payload Preferences",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Preference",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
                "email",
                "-email",
                "resetPasswordToken",
                "-resetPasswordToken",
                "resetPasswordExpiration",
                "-resetPasswordExpiration",
                "salt",
                "-salt",
                "hash",
                "-hash",
                "loginAttempts",
                "-loginAttempts",
                "lockUntil",
                "-lockUntil",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UsersQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/UsersQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of users",
        "tags": [
          "users",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/UsersRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewUsersResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new users",
        "tags": [
          "users",
        ],
      },
    },
    "/api/users/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a users",
        "tags": [
          "users",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a users by ID",
        "tags": [
          "users",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the users",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a users",
        "tags": [
          "users",
        ],
      },
    },
  },
  "servers": [
    {
      "url": "https//localhost",
    },
  ],
}
`;

exports[`openapi generators > handles block editor fields correctly 1`] = `
{
  "components": {
    "requestBodies": {
      "PageRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "content": {
                  "items": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "blockName": {
                            "nullable": true,
                            "type": "string",
                          },
                          "blockType": {
                            "enum": [
                              "pageContent",
                            ],
                          },
                          "id": {
                            "nullable": true,
                            "type": "string",
                          },
                          "richText": {
                            "nullable": true,
                            "properties": {
                              "root": {
                                "additionalProperties": false,
                                "properties": {
                                  "children": {
                                    "items": {
                                      "additionalProperties": true,
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                        },
                                        "version": {
                                          "type": "integer",
                                        },
                                      },
                                      "required": [
                                        "type",
                                        "version",
                                      ],
                                      "type": "object",
                                    },
                                    "type": "array",
                                  },
                                  "direction": {
                                    "oneOf": [
                                      {
                                        "enum": [
                                          "ltr",
                                          "rtl",
                                        ],
                                        "nullable": true,
                                      },
                                    ],
                                  },
                                  "format": {
                                    "enum": [
                                      "left",
                                      "start",
                                      "center",
                                      "right",
                                      "end",
                                      "justify",
                                      "",
                                    ],
                                    "type": "string",
                                  },
                                  "indent": {
                                    "type": "integer",
                                  },
                                  "type": {
                                    "type": "string",
                                  },
                                  "version": {
                                    "type": "integer",
                                  },
                                },
                                "required": [
                                  "children",
                                  "direction",
                                  "format",
                                  "indent",
                                  "type",
                                  "version",
                                ],
                                "type": "object",
                              },
                            },
                            "required": [
                              "root",
                            ],
                            "type": "object",
                          },
                        },
                        "required": [
                          "blockType",
                        ],
                        "type": "object",
                      },
                    ],
                  },
                  "nullable": true,
                  "type": "array",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
              ],
              "title": "Page",
              "type": "object",
            },
          },
        },
        "description": "Page",
      },
      "PayloadLockedDocumentRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "document": {
                  "description": "ID of the pages/users",
                  "type": "string",
                },
                "globalSlug": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadLockedDocument",
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document",
      },
      "PayloadMigrationRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "batch": {
                  "nullable": true,
                  "type": "number",
                },
                "name": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadMigration",
              "type": "object",
            },
          },
        },
        "description": "Payload Migration",
      },
      "PayloadPreferenceRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "key": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "object",
                    },
                    {
                      "items": {},
                      "type": "array",
                    },
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "boolean",
                    },
                  ],
                  "nullable": true,
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadPreference",
              "type": "object",
            },
          },
        },
        "description": "Payload Preference",
      },
      "UsersRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                },
                "hash": {
                  "nullable": true,
                  "type": "string",
                },
                "lockUntil": {
                  "nullable": true,
                  "type": "string",
                },
                "loginAttempts": {
                  "nullable": true,
                  "type": "number",
                },
                "password": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordExpiration": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordToken": {
                  "nullable": true,
                  "type": "string",
                },
                "salt": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
                "email",
              ],
              "title": "User",
              "type": "object",
            },
          },
        },
        "description": "users",
      },
    },
    "responses": {
      "NewPageResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Page",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Page object",
      },
      "NewPayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocument",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "NewPayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigration",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "NewPayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreference",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "NewUsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Users",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "users object",
      },
      "PageListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/Page",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Pages",
      },
      "PageNotFoundResponse": {
        "content": {},
        "description": "Page not found",
      },
      "PageResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Page",
            },
          },
        },
        "description": "Page object",
      },
      "PayloadLockedDocumentListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadLockedDocument",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Locked Documents",
      },
      "PayloadLockedDocumentNotFoundResponse": {
        "content": {},
        "description": "Payload Locked Document not found",
      },
      "PayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadLockedDocument",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "PayloadMigrationListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadMigration",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Migrations",
      },
      "PayloadMigrationNotFoundResponse": {
        "content": {},
        "description": "Payload Migration not found",
      },
      "PayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadMigration",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "PayloadPreferenceListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadPreference",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Preferences",
      },
      "PayloadPreferenceNotFoundResponse": {
        "content": {},
        "description": "Payload Preference not found",
      },
      "PayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadPreference",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "UsersListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/Users",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of users",
      },
      "UsersNotFoundResponse": {
        "content": {},
        "description": "users not found",
      },
      "UsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Users",
            },
          },
        },
        "description": "users object",
      },
    },
    "schemas": {
      "Page": {
        "additionalProperties": false,
        "properties": {
          "content": {
            "items": {
              "oneOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "blockName": {
                      "nullable": true,
                      "type": "string",
                    },
                    "blockType": {
                      "enum": [
                        "pageContent",
                      ],
                    },
                    "id": {
                      "nullable": true,
                      "type": "string",
                    },
                    "richText": {
                      "nullable": true,
                      "properties": {
                        "root": {
                          "additionalProperties": false,
                          "properties": {
                            "children": {
                              "items": {
                                "additionalProperties": true,
                                "properties": {
                                  "type": {
                                    "type": "string",
                                  },
                                  "version": {
                                    "type": "integer",
                                  },
                                },
                                "required": [
                                  "type",
                                  "version",
                                ],
                                "type": "object",
                              },
                              "type": "array",
                            },
                            "direction": {
                              "oneOf": [
                                {
                                  "enum": [
                                    "ltr",
                                    "rtl",
                                  ],
                                  "nullable": true,
                                },
                              ],
                            },
                            "format": {
                              "enum": [
                                "left",
                                "start",
                                "center",
                                "right",
                                "end",
                                "justify",
                                "",
                              ],
                              "type": "string",
                            },
                            "indent": {
                              "type": "integer",
                            },
                            "type": {
                              "type": "string",
                            },
                            "version": {
                              "type": "integer",
                            },
                          },
                          "required": [
                            "children",
                            "direction",
                            "format",
                            "indent",
                            "type",
                            "version",
                          ],
                          "type": "object",
                        },
                      },
                      "required": [
                        "root",
                      ],
                      "type": "object",
                    },
                  },
                  "required": [
                    "blockType",
                  ],
                  "type": "object",
                },
              ],
            },
            "nullable": true,
            "type": "array",
          },
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
        ],
        "title": "Page",
        "type": "object",
      },
      "PageQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Page query operations",
        "type": "object",
      },
      "PageQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PageQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PageQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PageQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Page query conjunction",
        "type": "object",
      },
      "PageQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PageQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PageQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PageQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Page query disjunction",
        "type": "object",
      },
      "PayloadLockedDocument": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "document": {
            "oneOf": [
              {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "pages",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Page",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
              {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "globalSlug": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Locked Document",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "globalSlug": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Locked Document query operations",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Locked Document query conjunction",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Locked Document query disjunction",
        "type": "object",
      },
      "PayloadMigration": {
        "additionalProperties": false,
        "properties": {
          "batch": {
            "nullable": true,
            "type": "number",
          },
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "name": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Migration",
        "type": "object",
      },
      "PayloadMigrationQueryOperations": {
        "properties": {
          "batch": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "name": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Migration query operations",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Migration query conjunction",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Migration query disjunction",
        "type": "object",
      },
      "PayloadPreference": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "key": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "value": {
            "anyOf": [
              {
                "type": "object",
              },
              {
                "items": {},
                "type": "array",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
            "nullable": true,
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Preference",
        "type": "object",
      },
      "PayloadPreferenceQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "key": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Preference query operations",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Preference query conjunction",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Preference query disjunction",
        "type": "object",
      },
      "Users": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "hash": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "lockUntil": {
            "nullable": true,
            "type": "string",
          },
          "loginAttempts": {
            "nullable": true,
            "type": "number",
          },
          "password": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordExpiration": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordToken": {
            "nullable": true,
            "type": "string",
          },
          "salt": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
          "email",
        ],
        "title": "users",
        "type": "object",
      },
      "UsersQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "email": {
            "properties": {
              "contains": {
                "format": "email",
                "type": "string",
              },
              "equals": {
                "format": "email",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "not_equals": {
                "format": "email",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "hash": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "lockUntil": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "loginAttempts": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordExpiration": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordToken": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "salt": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "users query operations",
        "type": "object",
      },
      "UsersQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UsersQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "users query conjunction",
        "type": "object",
      },
      "UsersQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UsersQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "users query disjunction",
        "type": "object",
      },
      "supportedTimezones": {
        "example": "Europe/Prague",
        "type": "string",
      },
    },
    "securitySchemes": {
      "ApiKey": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api//api/auth",
          },
        },
        "type": "oauth2",
      },
    },
  },
  "info": {
    "title": "Test API",
    "version": "1.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/pages": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PageQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PageQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PageQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PageListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Pages",
        "tags": [
          "Pages",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PageRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPageResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Page",
        "tags": [
          "Pages",
        ],
      },
    },
    "/api/pages/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PageResponse",
          },
          "404": {
            "$ref": "#/components/responses/PageNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Page",
        "tags": [
          "Pages",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PageResponse",
          },
          "404": {
            "$ref": "#/components/responses/PageNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Page by ID",
        "tags": [
          "Pages",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Page",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PageResponse",
          },
          "404": {
            "$ref": "#/components/responses/PageNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Page",
        "tags": [
          "Pages",
        ],
      },
    },
    "/api/payload-locked-documents": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "globalSlug",
                "-globalSlug",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Locked Documents",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadLockedDocumentRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadLockedDocumentResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-locked-documents/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Locked Document by ID",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Locked Document",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-migrations": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "name",
                "-name",
                "batch",
                "-batch",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Migrations",
        "tags": [
          "Payload Migrations",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadMigrationRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadMigrationResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-migrations/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Migration by ID",
        "tags": [
          "Payload Migrations",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Migration",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-preferences": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "key",
                "-key",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Preferences",
        "tags": [
          "Payload Preferences",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadPreferenceRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadPreferenceResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/payload-preferences/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Preference by ID",
        "tags": [
          "Payload Preferences",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Preference",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
                "email",
                "-email",
                "resetPasswordToken",
                "-resetPasswordToken",
                "resetPasswordExpiration",
                "-resetPasswordExpiration",
                "salt",
                "-salt",
                "hash",
                "-hash",
                "loginAttempts",
                "-loginAttempts",
                "lockUntil",
                "-lockUntil",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UsersQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/UsersQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of users",
        "tags": [
          "users",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/UsersRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewUsersResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new users",
        "tags": [
          "users",
        ],
      },
    },
    "/api/users/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a users",
        "tags": [
          "users",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a users by ID",
        "tags": [
          "users",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the users",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a users",
        "tags": [
          "users",
        ],
      },
    },
  },
  "servers": [
    {
      "url": "https//localhost",
    },
  ],
}
`;

exports[`openapi generators > handles datetime field with timezones correctly 1`] = `
{
  "components": {
    "requestBodies": {
      "EventRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "startsAt": {
                  "nullable": true,
                  "type": "string",
                },
                "startsAt_tz": {
                  "$ref": "#/components/schemas/supportedTimezones",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
              ],
              "title": "Event",
              "type": "object",
            },
          },
        },
        "description": "Event",
      },
      "PayloadLockedDocumentRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "document": {
                  "description": "ID of the events/users",
                  "type": "string",
                },
                "globalSlug": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadLockedDocument",
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document",
      },
      "PayloadMigrationRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "batch": {
                  "nullable": true,
                  "type": "number",
                },
                "name": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadMigration",
              "type": "object",
            },
          },
        },
        "description": "Payload Migration",
      },
      "PayloadPreferenceRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "key": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "object",
                    },
                    {
                      "items": {},
                      "type": "array",
                    },
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "boolean",
                    },
                  ],
                  "nullable": true,
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadPreference",
              "type": "object",
            },
          },
        },
        "description": "Payload Preference",
      },
      "UsersRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                },
                "hash": {
                  "nullable": true,
                  "type": "string",
                },
                "lockUntil": {
                  "nullable": true,
                  "type": "string",
                },
                "loginAttempts": {
                  "nullable": true,
                  "type": "number",
                },
                "password": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordExpiration": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordToken": {
                  "nullable": true,
                  "type": "string",
                },
                "salt": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
                "email",
              ],
              "title": "User",
              "type": "object",
            },
          },
        },
        "description": "users",
      },
    },
    "responses": {
      "EventListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/Event",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Events",
      },
      "EventNotFoundResponse": {
        "content": {},
        "description": "Event not found",
      },
      "EventResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Event",
            },
          },
        },
        "description": "Event object",
      },
      "NewEventResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Event",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Event object",
      },
      "NewPayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocument",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "NewPayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigration",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "NewPayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreference",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "NewUsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Users",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "users object",
      },
      "PayloadLockedDocumentListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadLockedDocument",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Locked Documents",
      },
      "PayloadLockedDocumentNotFoundResponse": {
        "content": {},
        "description": "Payload Locked Document not found",
      },
      "PayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadLockedDocument",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "PayloadMigrationListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadMigration",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Migrations",
      },
      "PayloadMigrationNotFoundResponse": {
        "content": {},
        "description": "Payload Migration not found",
      },
      "PayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadMigration",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "PayloadPreferenceListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadPreference",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Preferences",
      },
      "PayloadPreferenceNotFoundResponse": {
        "content": {},
        "description": "Payload Preference not found",
      },
      "PayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadPreference",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "UsersListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/Users",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of users",
      },
      "UsersNotFoundResponse": {
        "content": {},
        "description": "users not found",
      },
      "UsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Users",
            },
          },
        },
        "description": "users object",
      },
    },
    "schemas": {
      "Event": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "startsAt": {
            "nullable": true,
            "type": "string",
          },
          "startsAt_tz": {
            "$ref": "#/components/schemas/supportedTimezones",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
        ],
        "title": "Event",
        "type": "object",
      },
      "EventQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "startsAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "startsAt_tz": {
            "properties": {
              "equals": {
                "enum": [
                  "Pacific/Midway",
                  "Pacific/Niue",
                  "Pacific/Honolulu",
                  "Pacific/Rarotonga",
                  "America/Anchorage",
                  "Pacific/Gambier",
                  "America/Los_Angeles",
                  "America/Tijuana",
                  "America/Denver",
                  "America/Phoenix",
                  "America/Chicago",
                  "America/Guatemala",
                  "America/New_York",
                  "America/Bogota",
                  "America/Caracas",
                  "America/Santiago",
                  "America/Buenos_Aires",
                  "America/Sao_Paulo",
                  "Atlantic/South_Georgia",
                  "Atlantic/Azores",
                  "Atlantic/Cape_Verde",
                  "Europe/London",
                  "Europe/Berlin",
                  "Africa/Lagos",
                  "Europe/Athens",
                  "Africa/Cairo",
                  "Europe/Moscow",
                  "Asia/Riyadh",
                  "Asia/Dubai",
                  "Asia/Baku",
                  "Asia/Karachi",
                  "Asia/Tashkent",
                  "Asia/Calcutta",
                  "Asia/Dhaka",
                  "Asia/Almaty",
                  "Asia/Jakarta",
                  "Asia/Bangkok",
                  "Asia/Shanghai",
                  "Asia/Singapore",
                  "Asia/Tokyo",
                  "Asia/Seoul",
                  "Australia/Sydney",
                  "Pacific/Guam",
                  "Pacific/Noumea",
                  "Pacific/Auckland",
                  "Pacific/Fiji",
                ],
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "not_equals": {
                "enum": [
                  "Pacific/Midway",
                  "Pacific/Niue",
                  "Pacific/Honolulu",
                  "Pacific/Rarotonga",
                  "America/Anchorage",
                  "Pacific/Gambier",
                  "America/Los_Angeles",
                  "America/Tijuana",
                  "America/Denver",
                  "America/Phoenix",
                  "America/Chicago",
                  "America/Guatemala",
                  "America/New_York",
                  "America/Bogota",
                  "America/Caracas",
                  "America/Santiago",
                  "America/Buenos_Aires",
                  "America/Sao_Paulo",
                  "Atlantic/South_Georgia",
                  "Atlantic/Azores",
                  "Atlantic/Cape_Verde",
                  "Europe/London",
                  "Europe/Berlin",
                  "Africa/Lagos",
                  "Europe/Athens",
                  "Africa/Cairo",
                  "Europe/Moscow",
                  "Asia/Riyadh",
                  "Asia/Dubai",
                  "Asia/Baku",
                  "Asia/Karachi",
                  "Asia/Tashkent",
                  "Asia/Calcutta",
                  "Asia/Dhaka",
                  "Asia/Almaty",
                  "Asia/Jakarta",
                  "Asia/Bangkok",
                  "Asia/Shanghai",
                  "Asia/Singapore",
                  "Asia/Tokyo",
                  "Asia/Seoul",
                  "Australia/Sydney",
                  "Pacific/Guam",
                  "Pacific/Noumea",
                  "Pacific/Auckland",
                  "Pacific/Fiji",
                ],
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Event query operations",
        "type": "object",
      },
      "EventQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EventQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/EventQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/EventQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Event query conjunction",
        "type": "object",
      },
      "EventQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EventQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/EventQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/EventQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Event query disjunction",
        "type": "object",
      },
      "PayloadLockedDocument": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "document": {
            "oneOf": [
              {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "events",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Event",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
              {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "globalSlug": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Locked Document",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "globalSlug": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Locked Document query operations",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Locked Document query conjunction",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Locked Document query disjunction",
        "type": "object",
      },
      "PayloadMigration": {
        "additionalProperties": false,
        "properties": {
          "batch": {
            "nullable": true,
            "type": "number",
          },
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "name": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Migration",
        "type": "object",
      },
      "PayloadMigrationQueryOperations": {
        "properties": {
          "batch": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "name": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Migration query operations",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Migration query conjunction",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Migration query disjunction",
        "type": "object",
      },
      "PayloadPreference": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "key": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "value": {
            "anyOf": [
              {
                "type": "object",
              },
              {
                "items": {},
                "type": "array",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
            "nullable": true,
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Preference",
        "type": "object",
      },
      "PayloadPreferenceQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "key": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Preference query operations",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Preference query conjunction",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Preference query disjunction",
        "type": "object",
      },
      "Users": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "hash": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "lockUntil": {
            "nullable": true,
            "type": "string",
          },
          "loginAttempts": {
            "nullable": true,
            "type": "number",
          },
          "password": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordExpiration": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordToken": {
            "nullable": true,
            "type": "string",
          },
          "salt": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
          "email",
        ],
        "title": "users",
        "type": "object",
      },
      "UsersQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "email": {
            "properties": {
              "contains": {
                "format": "email",
                "type": "string",
              },
              "equals": {
                "format": "email",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "not_equals": {
                "format": "email",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "hash": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "lockUntil": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "loginAttempts": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordExpiration": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordToken": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "salt": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "users query operations",
        "type": "object",
      },
      "UsersQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UsersQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "users query conjunction",
        "type": "object",
      },
      "UsersQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UsersQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "users query disjunction",
        "type": "object",
      },
      "supportedTimezones": {
        "example": "Europe/Prague",
        "type": "string",
      },
    },
    "securitySchemes": {
      "ApiKey": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api//api/auth",
          },
        },
        "type": "oauth2",
      },
    },
  },
  "info": {
    "title": "Test API",
    "version": "1.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/events": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "startsAt",
                "-startsAt",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/EventQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/EventQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/EventQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Events",
        "tags": [
          "Events",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/EventRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewEventResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Event",
        "tags": [
          "Events",
        ],
      },
    },
    "/api/events/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse",
          },
          "404": {
            "$ref": "#/components/responses/EventNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Event",
        "tags": [
          "Events",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse",
          },
          "404": {
            "$ref": "#/components/responses/EventNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Event by ID",
        "tags": [
          "Events",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Event",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse",
          },
          "404": {
            "$ref": "#/components/responses/EventNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Event",
        "tags": [
          "Events",
        ],
      },
    },
    "/api/payload-locked-documents": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "globalSlug",
                "-globalSlug",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Locked Documents",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadLockedDocumentRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadLockedDocumentResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-locked-documents/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Locked Document by ID",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Locked Document",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-migrations": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "name",
                "-name",
                "batch",
                "-batch",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Migrations",
        "tags": [
          "Payload Migrations",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadMigrationRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadMigrationResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-migrations/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Migration by ID",
        "tags": [
          "Payload Migrations",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Migration",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-preferences": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "key",
                "-key",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Preferences",
        "tags": [
          "Payload Preferences",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadPreferenceRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadPreferenceResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/payload-preferences/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Preference by ID",
        "tags": [
          "Payload Preferences",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Preference",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
                "email",
                "-email",
                "resetPasswordToken",
                "-resetPasswordToken",
                "resetPasswordExpiration",
                "-resetPasswordExpiration",
                "salt",
                "-salt",
                "hash",
                "-hash",
                "loginAttempts",
                "-loginAttempts",
                "lockUntil",
                "-lockUntil",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UsersQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/UsersQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of users",
        "tags": [
          "users",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/UsersRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewUsersResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new users",
        "tags": [
          "users",
        ],
      },
    },
    "/api/users/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a users",
        "tags": [
          "users",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a users by ID",
        "tags": [
          "users",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the users",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a users",
        "tags": [
          "users",
        ],
      },
    },
  },
  "servers": [
    {
      "url": "https//localhost",
    },
  ],
}
`;

exports[`openapi generators > handles interfaceName correctly 1`] = `
{
  "components": {
    "requestBodies": {
      "PayloadLockedDocumentRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "document": {
                  "description": "ID of the users",
                  "type": "string",
                },
                "globalSlug": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadLockedDocument",
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document",
      },
      "PayloadMigrationRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "batch": {
                  "nullable": true,
                  "type": "number",
                },
                "name": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadMigration",
              "type": "object",
            },
          },
        },
        "description": "Payload Migration",
      },
      "PayloadPreferenceRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "key": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "object",
                    },
                    {
                      "items": {},
                      "type": "array",
                    },
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "boolean",
                    },
                  ],
                  "nullable": true,
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadPreference",
              "type": "object",
            },
          },
        },
        "description": "Payload Preference",
      },
      "UserRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                },
                "hash": {
                  "nullable": true,
                  "type": "string",
                },
                "lockUntil": {
                  "nullable": true,
                  "type": "string",
                },
                "loginAttempts": {
                  "nullable": true,
                  "type": "number",
                },
                "password": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordExpiration": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordToken": {
                  "nullable": true,
                  "type": "string",
                },
                "roles": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "nullable": true,
                        "type": "string",
                      },
                      "name": {
                        "nullable": true,
                        "type": "string",
                      },
                    },
                    "required": [],
                    "type": "object",
                  },
                  "nullable": true,
                  "type": "array",
                },
                "salt": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
                "email",
              ],
              "title": "User",
              "type": "object",
            },
          },
        },
        "description": "User",
      },
    },
    "responses": {
      "NewPayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocument",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "NewPayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigration",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "NewPayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreference",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "NewUserResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "User object",
      },
      "PayloadLockedDocumentListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadLockedDocument",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Locked Documents",
      },
      "PayloadLockedDocumentNotFoundResponse": {
        "content": {},
        "description": "Payload Locked Document not found",
      },
      "PayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadLockedDocument",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "PayloadMigrationListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadMigration",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Migrations",
      },
      "PayloadMigrationNotFoundResponse": {
        "content": {},
        "description": "Payload Migration not found",
      },
      "PayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadMigration",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "PayloadPreferenceListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadPreference",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Preferences",
      },
      "PayloadPreferenceNotFoundResponse": {
        "content": {},
        "description": "Payload Preference not found",
      },
      "PayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadPreference",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "UserListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/User",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Users",
      },
      "UserNotFoundResponse": {
        "content": {},
        "description": "User not found",
      },
      "UserResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User",
            },
          },
        },
        "description": "User object",
      },
    },
    "schemas": {
      "PayloadLockedDocument": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "document": {
            "oneOf": [
              {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/User",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "globalSlug": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/User",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Locked Document",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "globalSlug": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Locked Document query operations",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Locked Document query conjunction",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Locked Document query disjunction",
        "type": "object",
      },
      "PayloadMigration": {
        "additionalProperties": false,
        "properties": {
          "batch": {
            "nullable": true,
            "type": "number",
          },
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "name": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Migration",
        "type": "object",
      },
      "PayloadMigrationQueryOperations": {
        "properties": {
          "batch": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "name": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Migration query operations",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Migration query conjunction",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Migration query disjunction",
        "type": "object",
      },
      "PayloadPreference": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "key": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/User",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "value": {
            "anyOf": [
              {
                "type": "object",
              },
              {
                "items": {},
                "type": "array",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
            "nullable": true,
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Preference",
        "type": "object",
      },
      "PayloadPreferenceQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "key": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Preference query operations",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Preference query conjunction",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Preference query disjunction",
        "type": "object",
      },
      "User": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "hash": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "lockUntil": {
            "nullable": true,
            "type": "string",
          },
          "loginAttempts": {
            "nullable": true,
            "type": "number",
          },
          "password": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordExpiration": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordToken": {
            "nullable": true,
            "type": "string",
          },
          "roles": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "id": {
                  "nullable": true,
                  "type": "string",
                },
                "name": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [],
              "type": "object",
            },
            "nullable": true,
            "type": "array",
          },
          "salt": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
          "email",
        ],
        "title": "User",
        "type": "object",
      },
      "UserQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "email": {
            "properties": {
              "contains": {
                "format": "email",
                "type": "string",
              },
              "equals": {
                "format": "email",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "not_equals": {
                "format": "email",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "hash": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "lockUntil": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "loginAttempts": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordExpiration": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordToken": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "salt": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "User query operations",
        "type": "object",
      },
      "UserQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UserQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UserQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "User query conjunction",
        "type": "object",
      },
      "UserQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UserQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UserQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "User query disjunction",
        "type": "object",
      },
      "supportedTimezones": {
        "example": "Europe/Prague",
        "type": "string",
      },
    },
    "securitySchemes": {
      "ApiKey": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api//api/auth",
          },
        },
        "type": "oauth2",
      },
    },
  },
  "info": {
    "title": "Test API",
    "version": "1.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/payload-locked-documents": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "globalSlug",
                "-globalSlug",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Locked Documents",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadLockedDocumentRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadLockedDocumentResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-locked-documents/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Locked Document by ID",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Locked Document",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-migrations": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "name",
                "-name",
                "batch",
                "-batch",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Migrations",
        "tags": [
          "Payload Migrations",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadMigrationRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadMigrationResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-migrations/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Migration by ID",
        "tags": [
          "Payload Migrations",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Migration",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-preferences": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "key",
                "-key",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Preferences",
        "tags": [
          "Payload Preferences",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadPreferenceRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadPreferenceResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/payload-preferences/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Preference by ID",
        "tags": [
          "Payload Preferences",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Preference",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
                "email",
                "-email",
                "resetPasswordToken",
                "-resetPasswordToken",
                "resetPasswordExpiration",
                "-resetPasswordExpiration",
                "salt",
                "-salt",
                "hash",
                "-hash",
                "loginAttempts",
                "-loginAttempts",
                "lockUntil",
                "-lockUntil",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/UserQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/UserQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Users",
        "tags": [
          "Users",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/UserRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewUserResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new User",
        "tags": [
          "Users",
        ],
      },
    },
    "/api/users/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserResponse",
          },
          "404": {
            "$ref": "#/components/responses/UserNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a User",
        "tags": [
          "Users",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserResponse",
          },
          "404": {
            "$ref": "#/components/responses/UserNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a User by ID",
        "tags": [
          "Users",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the User",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserResponse",
          },
          "404": {
            "$ref": "#/components/responses/UserNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a User",
        "tags": [
          "Users",
        ],
      },
    },
  },
  "servers": [
    {
      "url": "https//localhost",
    },
  ],
}
`;

exports[`openapi generators > handles non-default collection 1`] = `
{
  "components": {
    "requestBodies": {
      "PayloadLockedDocumentRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "document": {
                  "description": "ID of the posts/users",
                  "type": "string",
                },
                "globalSlug": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadLockedDocument",
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document",
      },
      "PayloadMigrationRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "batch": {
                  "nullable": true,
                  "type": "number",
                },
                "name": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadMigration",
              "type": "object",
            },
          },
        },
        "description": "Payload Migration",
      },
      "PayloadPreferenceRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "key": {
                  "nullable": true,
                  "type": "string",
                },
                "user": {
                  "description": "ID of the users",
                  "type": "string",
                },
                "value": {
                  "anyOf": [
                    {
                      "type": "object",
                    },
                    {
                      "items": {},
                      "type": "array",
                    },
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "boolean",
                    },
                  ],
                  "nullable": true,
                },
              },
              "required": [
                "id",
                "user",
                "updatedAt",
                "createdAt",
              ],
              "title": "PayloadPreference",
              "type": "object",
            },
          },
        },
        "description": "Payload Preference",
      },
      "PostRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "title": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
              ],
              "title": "Post",
              "type": "object",
            },
          },
        },
        "description": "Post",
      },
      "UsersRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                },
                "hash": {
                  "nullable": true,
                  "type": "string",
                },
                "lockUntil": {
                  "nullable": true,
                  "type": "string",
                },
                "loginAttempts": {
                  "nullable": true,
                  "type": "number",
                },
                "password": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordExpiration": {
                  "nullable": true,
                  "type": "string",
                },
                "resetPasswordToken": {
                  "nullable": true,
                  "type": "string",
                },
                "salt": {
                  "nullable": true,
                  "type": "string",
                },
              },
              "required": [
                "id",
                "updatedAt",
                "createdAt",
                "email",
              ],
              "title": "User",
              "type": "object",
            },
          },
        },
        "description": "users",
      },
    },
    "responses": {
      "NewPayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocument",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "NewPayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigration",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "NewPayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreference",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "NewPostResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Post",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "Post object",
      },
      "NewUsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "doc": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Users",
                    },
                    {
                      "properties": {
                        "createdAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                        "id": {
                          "type": "string",
                        },
                        "updatedAt": {
                          "format": "date-time",
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "message": {
                  "type": "string",
                },
              },
              "required": [
                "message",
                "doc",
              ],
              "type": "object",
            },
          },
        },
        "description": "users object",
      },
      "PayloadLockedDocumentListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadLockedDocument",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Locked Documents",
      },
      "PayloadLockedDocumentNotFoundResponse": {
        "content": {},
        "description": "Payload Locked Document not found",
      },
      "PayloadLockedDocumentResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadLockedDocument",
            },
          },
        },
        "description": "Payload Locked Document object",
      },
      "PayloadMigrationListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadMigration",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Migrations",
      },
      "PayloadMigrationNotFoundResponse": {
        "content": {},
        "description": "Payload Migration not found",
      },
      "PayloadMigrationResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadMigration",
            },
          },
        },
        "description": "Payload Migration object",
      },
      "PayloadPreferenceListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/PayloadPreference",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Payload Preferences",
      },
      "PayloadPreferenceNotFoundResponse": {
        "content": {},
        "description": "Payload Preference not found",
      },
      "PayloadPreferenceResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PayloadPreference",
            },
          },
        },
        "description": "Payload Preference object",
      },
      "PostListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/Post",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of Posts",
      },
      "PostNotFoundResponse": {
        "content": {},
        "description": "Post not found",
      },
      "PostResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Post",
            },
          },
        },
        "description": "Post object",
      },
      "UsersListResponse": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "docs": {
                  "items": {
                    "$ref": "#/components/schemas/Users",
                  },
                  "type": "array",
                },
                "hasNextPage": {
                  "type": "boolean",
                },
                "hasPrevPage": {
                  "type": "boolean",
                },
                "limit": {
                  "type": "integer",
                },
                "nextPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "page": {
                  "type": "integer",
                },
                "pagingCounter": {
                  "type": "integer",
                },
                "prevPage": {
                  "nullable": true,
                  "type": "integer",
                },
                "totalDocs": {
                  "type": "integer",
                },
                "totalPages": {
                  "type": "integer",
                },
              },
              "required": [
                "docs",
                "totalDocs",
                "limit",
                "totalPages",
                "page",
                "pagingCounter",
                "hasPrevPage",
                "hasNextPage",
                "prevPage",
                "nextPage",
              ],
              "type": "object",
            },
          },
        },
        "description": "List of users",
      },
      "UsersNotFoundResponse": {
        "content": {},
        "description": "users not found",
      },
      "UsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Users",
            },
          },
        },
        "description": "users object",
      },
    },
    "schemas": {
      "PayloadLockedDocument": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "document": {
            "oneOf": [
              {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "posts",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Post",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
              {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "globalSlug": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Locked Document",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "globalSlug": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Locked Document query operations",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Locked Document query conjunction",
        "type": "object",
      },
      "PayloadLockedDocumentQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Locked Document query disjunction",
        "type": "object",
      },
      "PayloadMigration": {
        "additionalProperties": false,
        "properties": {
          "batch": {
            "nullable": true,
            "type": "number",
          },
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "name": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Migration",
        "type": "object",
      },
      "PayloadMigrationQueryOperations": {
        "properties": {
          "batch": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "name": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Migration query operations",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Migration query conjunction",
        "type": "object",
      },
      "PayloadMigrationQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Migration query disjunction",
        "type": "object",
      },
      "PayloadPreference": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "key": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
          "user": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "relationTo": {
                    "enum": [
                      "users",
                    ],
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "$ref": "#/components/schemas/Users",
                      },
                    ],
                  },
                },
                "required": [
                  "value",
                  "relationTo",
                ],
                "type": "object",
              },
            ],
          },
          "value": {
            "anyOf": [
              {
                "type": "object",
              },
              {
                "items": {},
                "type": "array",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
            "nullable": true,
          },
        },
        "required": [
          "id",
          "user",
          "updatedAt",
          "createdAt",
        ],
        "title": "Payload Preference",
        "type": "object",
      },
      "PayloadPreferenceQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "key": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Payload Preference query operations",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Payload Preference query conjunction",
        "type": "object",
      },
      "PayloadPreferenceQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Payload Preference query disjunction",
        "type": "object",
      },
      "Post": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "title": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
        ],
        "title": "Post",
        "type": "object",
      },
      "PostQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "title": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "Post query operations",
        "type": "object",
      },
      "PostQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PostQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PostQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PostQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "Post query conjunction",
        "type": "object",
      },
      "PostQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PostQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/PostQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/PostQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "Post query disjunction",
        "type": "object",
      },
      "Users": {
        "additionalProperties": false,
        "properties": {
          "createdAt": {
            "type": "string",
          },
          "email": {
            "type": "string",
          },
          "hash": {
            "nullable": true,
            "type": "string",
          },
          "id": {
            "type": "string",
          },
          "lockUntil": {
            "nullable": true,
            "type": "string",
          },
          "loginAttempts": {
            "nullable": true,
            "type": "number",
          },
          "password": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordExpiration": {
            "nullable": true,
            "type": "string",
          },
          "resetPasswordToken": {
            "nullable": true,
            "type": "string",
          },
          "salt": {
            "nullable": true,
            "type": "string",
          },
          "updatedAt": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "updatedAt",
          "createdAt",
          "email",
        ],
        "title": "users",
        "type": "object",
      },
      "UsersQueryOperations": {
        "properties": {
          "createdAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "email": {
            "properties": {
              "contains": {
                "format": "email",
                "type": "string",
              },
              "equals": {
                "format": "email",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "not_equals": {
                "format": "email",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "hash": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "lockUntil": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "loginAttempts": {
            "properties": {
              "equals": {
                "type": "number",
              },
              "greater_than": {
                "type": "number",
              },
              "greater_than_equal": {
                "type": "number",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "type": "number",
              },
              "less_than_equal": {
                "type": "number",
              },
              "not_equals": {
                "type": "number",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordExpiration": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "resetPasswordToken": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "salt": {
            "properties": {
              "contains": {
                "type": "string",
              },
              "equals": {
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "like": {
                "type": "string",
              },
              "not_equals": {
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "updatedAt": {
            "properties": {
              "equals": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than": {
                "format": "date-time",
                "type": "string",
              },
              "greater_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "in": {
                "type": "string",
              },
              "less_than": {
                "format": "date-time",
                "type": "string",
              },
              "less_than_equal": {
                "format": "date-time",
                "type": "string",
              },
              "not_equals": {
                "format": "date-time",
                "type": "string",
              },
              "not_in": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "title": "users query operations",
        "type": "object",
      },
      "UsersQueryOperationsAnd": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UsersQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "and",
        ],
        "title": "users query conjunction",
        "type": "object",
      },
      "UsersQueryOperationsOr": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UsersQueryOperations",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                },
                {
                  "$ref": "#/components/schemas/UsersQueryOperationsOr",
                },
              ],
            },
            "type": "array",
          },
        },
        "required": [
          "or",
        ],
        "title": "users query disjunction",
        "type": "object",
      },
      "supportedTimezones": {
        "example": "Europe/Prague",
        "type": "string",
      },
    },
    "securitySchemes": {
      "ApiKey": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api//api/auth",
          },
        },
        "type": "oauth2",
      },
    },
  },
  "info": {
    "title": "Test API",
    "version": "1.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/payload-locked-documents": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "globalSlug",
                "-globalSlug",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadLockedDocumentQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Locked Documents",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadLockedDocumentRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadLockedDocumentResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-locked-documents/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Locked Document by ID",
        "tags": [
          "Payload Locked Documents",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Locked Document",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadLockedDocumentResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadLockedDocumentNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Locked Document",
        "tags": [
          "Payload Locked Documents",
        ],
      },
    },
    "/api/payload-migrations": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "name",
                "-name",
                "batch",
                "-batch",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadMigrationQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Migrations",
        "tags": [
          "Payload Migrations",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadMigrationRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadMigrationResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-migrations/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Migration by ID",
        "tags": [
          "Payload Migrations",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Migration",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadMigrationResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadMigrationNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Migration",
        "tags": [
          "Payload Migrations",
        ],
      },
    },
    "/api/payload-preferences": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "key",
                "-key",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PayloadPreferenceQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Payload Preferences",
        "tags": [
          "Payload Preferences",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PayloadPreferenceRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPayloadPreferenceResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/payload-preferences/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Payload Preference by ID",
        "tags": [
          "Payload Preferences",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Payload Preference",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PayloadPreferenceResponse",
          },
          "404": {
            "$ref": "#/components/responses/PayloadPreferenceNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Payload Preference",
        "tags": [
          "Payload Preferences",
        ],
      },
    },
    "/api/posts": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "title",
                "-title",
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PostQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/PostQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/PostQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of Posts",
        "tags": [
          "Posts",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/PostRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewPostResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new Post",
        "tags": [
          "Posts",
        ],
      },
    },
    "/api/posts/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostResponse",
          },
          "404": {
            "$ref": "#/components/responses/PostNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a Post",
        "tags": [
          "Posts",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostResponse",
          },
          "404": {
            "$ref": "#/components/responses/PostNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a Post by ID",
        "tags": [
          "Posts",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the Post",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostResponse",
          },
          "404": {
            "$ref": "#/components/responses/PostNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a Post",
        "tags": [
          "Posts",
        ],
      },
    },
    "/api/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "depth",
            "schema": {
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "fallback-locale",
            "schema": {
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "updatedAt",
                "-updatedAt",
                "createdAt",
                "-createdAt",
                "email",
                "-email",
                "resetPasswordToken",
                "-resetPasswordToken",
                "resetPasswordExpiration",
                "-resetPasswordExpiration",
                "salt",
                "-salt",
                "hash",
                "-hash",
                "loginAttempts",
                "-loginAttempts",
                "lockUntil",
                "-lockUntil",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "where",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UsersQueryOperations",
                    },
                    {
                      "$ref": "#/components/schemas/UsersQueryOperationsAnd",
                    },
                    {
                      "$ref": "#/components/schemas/UsersQueryOperationsOr",
                    },
                  ],
                },
              ],
            },
            "style": "deepObject",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersListResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Retrieve a list of users",
        "tags": [
          "users",
        ],
      },
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/UsersRequestBody",
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewUsersResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Create a new users",
        "tags": [
          "users",
        ],
      },
    },
    "/api/users/{id}": {
      "delete": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Delete a users",
        "tags": [
          "users",
        ],
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Find a users by ID",
        "tags": [
          "users",
        ],
      },
      "parameters": [
        {
          "in": "query",
          "name": "depth",
          "schema": {
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "fallback-locale",
          "schema": {
            "type": "string",
          },
        },
        {
          "description": "ID of the users",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
      ],
      "patch": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse",
          },
          "404": {
            "$ref": "#/components/responses/UsersNotFoundResponse",
          },
        },
        "security": [
          {
            "ApiKey": [],
          },
        ],
        "summary": "Update a users",
        "tags": [
          "users",
        ],
      },
    },
  },
  "servers": [
    {
      "url": "https//localhost",
    },
  ],
}
`;
